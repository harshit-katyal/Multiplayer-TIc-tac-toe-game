{"version":3,"sources":["components/pages/logo.png","components/functional/ChoiceButton.js","components/functional/Choice.js","components/functional/Input.js","components/functional/InputForm.js","components/functional/Loading.js","components/functional/Error.js","components/pages/Start.js","components/functional/icons/X.js","components/functional/icons/O.js","components/functional/icons/index.js","components/functional/Square.js","components/functional/Wait.js","components/functional/Status.js","components/functional/Score.js","components/functional/ScoreBoard.js","components/functional/PlayAgain.js","components/pages/Board.js","Game.js","index.js"],"names":["module","exports","ChoiceButton","type","choice","label","onChoice","className","onClick","bind","Choice","logo","href","src","alt","Input","props","name","placeholder","value","onChange","autoComplete","id","InputForm","stepBack","onSubmit","onTyping","newGame","room","Loading","loading","style","display","userSelect","Error","message","opacity","Start","newState","setState","stepForward","validate","state","socket","emit","setTimeout","displayError","step","e","target","error","errorMessage","serverConfirmed","this","socketIOClient","on","disconnect","to","React","Component","beforeStyle","background","width","height","position","transform","afterStyle","X","borderRadius","O","Icon","end","turn","player","Square","Wait","textArea","useRef","ref","readOnly","current","select","document","execCommand","Status","Score","score","ScoreBoard","data","player1","player2","PlayAgain","visibility","Board","handleClick","index","game","piece","playAgainRequest","Array","fill","statusMessage","currentPlayerScore","opponentPlayer","waiting","joinError","socketID","io","qs","parse","window","location","search","ignoreQueryPrefix","gameState","players","gameStart","handleUpdate","handleWin","handleDraw","handleRestart","opponent","filter","setBoard","setTurn","setMessage","playerScore","opponentScore","i","key","squareArray","newSquare","renderSquare","push","Game","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.260a1149.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ef02fd95.png\";","import React from 'react';\r\n\r\nconst ChoiceButton = ({type, choice, label, onChoice}) => {\r\n    return (\r\n        <div className={`btn btn-${type}`} onClick={onChoice.bind(this, choice)}>{label}</div>\r\n    );\r\n}\r\n\r\nexport default ChoiceButton;\r\n","import React from 'react';\r\nimport ChoiceButton from './ChoiceButton'\r\n\r\nconst Choice = ({logo, onChoice}) => {\r\n    return (\r\n        <>\r\n        <div className='choice-container'>\r\n            <a href=\"/\"><img src={logo} alt='React TicTacToe'/></a>\r\n            <ChoiceButton onChoice={onChoice} type='primary' choice='new' label='Start New'/> \r\n            <ChoiceButton onChoice={onChoice} type='secondary' choice='join' label='Join Game'/> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Choice;\r\n","import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    const {name, placeholder, value, onChange} = props\r\n    return (\r\n        <input autoComplete='off' type=\"text\" name={name} id={name} placeholder={placeholder} value={value} onChange={onChange}/>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport Input from './Input.js'\r\nimport ChoiceButton from './ChoiceButton'\r\n\r\nconst InputForm = (props) => {\r\n    const {stepBack, onSubmit, onTyping, newGame, name, room} = props\r\n    \r\n\r\n    if (newGame){\r\n        return (\r\n            <div className=\"input-container\">\r\n                <Input \r\n                name='name'\r\n                placeholder='Your Name...'\r\n                onChange = {onTyping}\r\n                value = {name}\r\n                />\r\n                <div className='nav-container'>\r\n                    <ChoiceButton type='nav-back' choice='back' onChoice={stepBack} label='Back'/>\r\n                    <ChoiceButton type='nav-forward' choice='submit' onChoice={onSubmit} label=\"Let's Go\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else{\r\n        return (\r\n            <div className=\"input-container\">\r\n                <Input \r\n                name='name'\r\n                placeholder='Your Name...'\r\n                onChange = {onTyping}\r\n                value = {name}\r\n                />\r\n                <Input \r\n                name='room'\r\n                placeholder='Room ID...'\r\n                onChange = {onTyping}\r\n                value = {room}\r\n                />\r\n                <div className='nav-container'>\r\n                    <ChoiceButton type='nav-back' choice='back' onChoice={stepBack} label='Back'/>\r\n                    <ChoiceButton type='nav-forward' choice='submit' onChoice={onSubmit} label=\"Let's Go\"/>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\n\r\nconst Loading = ({loading}) => {\r\n    return (\r\n        <div className=\"loader\" style={{display:loading?'flex':'none'}}>\r\n            <i className=\"fa fa-spinner fa-pulse fa-4x fa-fw\"></i>\r\n            <span style={{userSelect: 'none'}}>Loading...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nconst Error = ({display, message}) => {\r\n    return (\r\n        <div className=\"error\" style={{opacity:display?'100%':'0'}}>\r\n            <h1 className=\"error-message\">\r\n                {message}\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nimport Choice from '../functional/Choice.js'\r\nimport InputForm from '../functional/InputForm.js'\r\nimport Loading from '../functional/Loading'\r\nimport Error from '../functional/Error'\r\nimport logo from './logo.png'\r\n\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport socketIOClient from 'socket.io-client'\r\nconst ENDPOINT = 'https://react-ttt-app.herokuapp.com/'\r\n\r\nclass Start extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            step: 1,\r\n            name: '',\r\n            newGame: null,\r\n            room: '',\r\n            loading: false,\r\n            serverConfirmed: false,\r\n            error: false,\r\n            errorMessage: '',\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.socket = socketIOClient(ENDPOINT)\r\n        this.socket.on('newGameCreated', (room) =>{\r\n            this.setState({serverConfirmed:true, room:room})\r\n        })\r\n        this.socket.on('joinConfirmed', ()=>{\r\n            this.setState({serverConfirmed:true})\r\n        })\r\n        this.socket.on('errorMessage', (message) => this.displayError(message))\r\n    }\r\n\r\n\r\n    componentWillUnmount(){\r\n        this.socket.disconnect()\r\n    }\r\n\r\n    onChoice = (choice)=>{\r\n        const gameChoice = choice==='new'?true:false\r\n        const newState = {newGame: gameChoice}\r\n        this.setState(newState, ()=>{\r\n            this.stepForward()\r\n        })\r\n    }\r\n\r\n    validate = ()=>{\r\n        if (this.state.newGame){\r\n            return !(this.state.name==='')\r\n        }else{\r\n            return !(this.state.name==='') && !(this.state.room==='')\r\n        }\r\n    }\r\n\r\n    onSubmit = ()=>{\r\n        this.setState({loading: true})\r\n        if (this.validate()){\r\n            if (this.state.newGame){\r\n                this.socket.emit('newGame')\r\n            }else{\r\n                this.socket.emit('joining', {room:this.state.room})\r\n            }\r\n        }else{\r\n            setTimeout(()=>this.setState({loading: false }), 500)\r\n            this.displayError(this.state.newGame? 'Please fill out your name':'Please fill out your name and room id')\r\n        }\r\n    }\r\n\r\n    stepBack = ()=>{\r\n        this.setState({step: this.state.step - 1})\r\n    }\r\n\r\n    stepForward = () =>{\r\n        this.setState({step: this.state.step + 1})\r\n    }\r\n\r\n    onTyping = (e)=>{\r\n        const target = e.target.name\r\n        const newState = {[target]:e.target.value}\r\n        this.setState(newState)\r\n    }\r\n\r\n    displayError = (message) =>{\r\n        this.setState({error:true, errorMessage:message, loading:false})\r\n        setTimeout(()=>{\r\n            this.setState({error:false, errorMessage:''})\r\n        }, 3000)\r\n    }\r\n\r\n    render(){\r\n        if (this.state.serverConfirmed){\r\n            return(\r\n                <Redirect to={`/game?room=${this.state.room}&name=${this.state.name}`} />\r\n            )\r\n        }else{\r\n            switch(this.state.step){\r\n                case(1):\r\n                    return (\r\n                        <Choice logo={logo} onChoice={this.onChoice}/>\r\n                    );\r\n                case(2):\r\n                    return (\r\n                        <>\r\n                            <Loading loading={this.state.loading}/>\r\n                            <Error display={this.state.error} message={this.state.errorMessage}/>\r\n                            <InputForm \r\n                                stepBack={this.stepBack} \r\n                                onSubmit={this.onSubmit} \r\n                                onTyping={this.onTyping.bind(this)}\r\n                                newGame={this.state.newGame}\r\n                                name = {this.state.name}\r\n                                room = {this.state.room}/> \r\n                        </>\r\n                    );\r\n                default:\r\n                    return null\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default Start;\r\n\r\n","import React from 'react';\r\n\r\nconst beforeStyle ={\r\n    background: 'white',\r\n    width: '93%',\r\n    height: '13%',\r\n    position: 'absolute',\r\n    transform: 'rotate(45deg)'\r\n}\r\nconst afterStyle ={\r\n    background: 'white',\r\n    width: '93%',\r\n    height: '13%',\r\n    position: 'absolute',\r\n    transform: 'rotate(-45deg)'\r\n}\r\n\r\n\r\nconst X = () => {\r\n    return (\r\n        <>\r\n            <div className=\"before\" style={beforeStyle}></div>\r\n            <div className = \"after\" style={afterStyle}></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default X;\r\n","import React from 'react';\r\n\r\nconst beforeStyle ={\r\n    background: 'white',\r\n    width: '90%',\r\n    height: '90%',\r\n    position: 'absolute',\r\n    borderRadius: '50%',\r\n    // transform: 'rotate(45deg)'\r\n}\r\nconst afterStyle ={\r\n    background: 'var(--dark-blue)',\r\n    width: '70%',\r\n    height: '70%',\r\n    position: 'absolute',\r\n    borderRadius: '50%',\r\n    // transform: 'rotate(45deg)'\r\n}\r\n\r\n\r\nconst O = () => {\r\n    return (\r\n        <>\r\n            <div className=\"before\" style={beforeStyle}></div>\r\n            <div className = \"after\" style={afterStyle}></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default O;\r\n","import React from 'react';\r\nimport X from './X'\r\nimport O from './O'\r\nconst Icon = (props) => {\r\n    switch(props.value){\r\n        case 'X':\r\n            return <X />\r\n        case 'O':\r\n            return <O />\r\n        default:\r\n            if (props.end || !props.turn){\r\n                return <div></div>\r\n            }else{\r\n                switch(props.player){\r\n                    case 'X':\r\n                        return <div className='placeHolder'><X /></div>\r\n                    case 'O':\r\n                        return <div className='placeHolder'><O /></div>\r\n                    default:\r\n                        return <div></div>\r\n                }   \r\n            }\r\n    }\r\n}\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport Icon from './icons'\r\n\r\nconst Square = (props) => {\r\n  return (\r\n    <div className=\"square\" onClick={props.onClick.bind(this, props.id)}>\r\n      <Icon {...props}/> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n\r\n\r\n\r\n","import React, {useRef} from 'react';\r\n\r\nconst Wait = ({room, display}) => {\r\n    const textArea = useRef(null)\r\n    const onClick = () =>{\r\n        textArea.current.select()\r\n        document.execCommand('copy')\r\n    }\r\n\r\n    return (\r\n        <div className='wait' style={{display:display?'flex':'none'}}>\r\n            <h1 className=\"wait-message\">Waiting for player to connect...</h1>\r\n            <div className=\"copy\">\r\n                <h1 className='copy-message'>Give your friend the following room id to connect</h1>\r\n                <div className='copy-container'>\r\n                    <input ref={textArea} readOnly={true} value={room} className='copy-area'/>\r\n                    <button className='copy-button' onClick={onClick}>Copy</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wait;\r\n","import React from 'react'\r\n\r\nexport default function Status({message}) {\r\n    return (\r\n        <div className='status'>\r\n            <h1 className=\"status-message\">{message}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Score({name, score}) {\r\n    return (\r\n        <div className='score-container'>\r\n            <h1 className='name'>{name}</h1>\r\n            <h1 className='score'>{score}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Score from './Score'\r\n\r\nexport default function ScoreBoard({data}) {\r\n    return (\r\n        <div className='score-board'>\r\n            <h1 className=\"score-title\">Score Board</h1>\r\n            <Score name={data.player1[0]} score={data.player1[1]}/>\r\n            <Score name={data.player2[0]} score={data.player2[1]}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PlayAgain({end, onClick}) {\r\n    return (\r\n        <div className='again-container'>\r\n            <button className='again-button' onClick={onClick} style={{visibility: end?'visible':'hidden', opacity: end?'1':'0'}}>Play Again</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport Square from '../functional/Square';\r\nimport Wait from '../functional/Wait'\r\nimport Status from '../functional/Status'\r\nimport ScoreBoard from '../functional/ScoreBoard'\r\nimport PlayAgain from '../functional/PlayAgain'\r\n\r\nimport io from 'socket.io-client'\r\nimport qs from 'qs'\r\nconst ENDPOINT = 'https://react-ttt-app.herokuapp.com/'\r\n\r\nclass Board extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      game: new Array(9).fill(null),\r\n      piece: 'X',\r\n      turn: true,\r\n      end: false,\r\n      room: '',\r\n      statusMessage: '',\r\n      currentPlayerScore: 0,\r\n      opponentPlayer: [],\r\n      //State to check when a new user join\r\n      waiting: false,\r\n      joinError: false\r\n    }\r\n    this.socketID = null\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Getting the room and the username information from the url\r\n    //Then emit to back end to process\r\n    this.socket = io(ENDPOINT)\r\n    const {room, name} = qs.parse(window.location.search, {\r\n      ignoreQueryPrefix: true\r\n     })\r\n    this.setState({room})\r\n    this.socket.emit('newRoomJoin', {room, name})\r\n\r\n    //New user join, logic decide on backend whether to display \r\n    //the actual game or the wait screen or redirect back to the main page\r\n    this.socket.on('waiting', ()=> this.setState({waiting:true, currentPlayerScore:0, opponentPlayer:[]}))\r\n    this.socket.on('starting', ({gameState, players, turn})=> {\r\n      this.setState({waiting:false})\r\n      this.gameStart(gameState, players, turn)\r\n    })\r\n    this.socket.on('joinError', () => this.setState({joinError: true}))\r\n\r\n    //Listening to the assignment of piece store the piece along with the in state\r\n    //socket id in local socketID variable\r\n    this.socket.on('pieceAssignment', ({piece, id}) => {\r\n      this.setState({piece: piece})\r\n      this.socketID = id \r\n    })\r\n\r\n    //Game play logic events\r\n    this.socket.on('update', ({gameState, turn}) => this.handleUpdate(gameState, turn))\r\n    this.socket.on('winner', ({gameState,id}) => this.handleWin(id, gameState))\r\n    this.socket.on('draw', ({gameState}) => this.handleDraw(gameState))\r\n\r\n    this.socket.on('restart', ({gameState, turn}) => this.handleRestart(gameState, turn))\r\n  }\r\n\r\n  //Setting the states to start a game when new user join\r\n  gameStart(gameState, players, turn){\r\n    const opponent = players.filter(([id, name]) => id!==this.socketID)[0][1]\r\n    this.setState({opponentPlayer: [opponent, 0], end:false})\r\n    this.setBoard(gameState)\r\n    this.setTurn(turn)\r\n    this.setMessage()\r\n  }\r\n\r\n  //When some one make a move, emit the event to the back end for handling\r\n  handleClick = (index) => {\r\n    const {game, piece, end, turn, room} = this.state\r\n    if (!game[index] && !end && turn){\r\n      this.socket.emit('move', {room, piece, index})\r\n    }\r\n  }\r\n\r\n  //Setting the states each move when the game haven't ended (no wins or draw)\r\n  handleUpdate(gameState, turn){\r\n    this.setBoard(gameState)\r\n    this.setTurn(turn)\r\n    this.setMessage()\r\n  }\r\n\r\n  //Setting the states when some one wins\r\n  handleWin(id, gameState) {\r\n    this.setBoard(gameState)\r\n    if (this.socketID === id){\r\n      const playerScore = this.state.currentPlayerScore + 1\r\n      this.setState({currentPlayerScore:playerScore, statusMessage:'You Win'})\r\n    }else{\r\n      const opponentScore = this.state.opponentPlayer[1] + 1\r\n      const opponent = this.state.opponentPlayer\r\n      opponent[1] = opponentScore\r\n      this.setState({opponentPlayer:opponent, statusMessage:`${this.state.opponentPlayer[0]} Wins`})\r\n    }\r\n    this.setState({end:true})\r\n  }\r\n\r\n  //Setting the states when there is a draw at the end\r\n  handleDraw(gameState){\r\n    this.setBoard(gameState)\r\n    this.setState({end:true, statusMessage:'Draw'})\r\n  }\r\n\r\n  playAgainRequest = () => {\r\n    this.socket.emit('playAgainRequest', this.state.room)\r\n  }\r\n\r\n  //Handle the restart event from the back end\r\n  handleRestart(gameState, turn){\r\n    this.setBoard(gameState)\r\n    this.setTurn(turn)\r\n    this.setMessage()\r\n    this.setState({end: false})\r\n  }\r\n\r\n  //Some utilities methods to set the states of the board\r\n\r\n  setMessage(){\r\n    const message = this.state.turn?'Your Turn':`${this.state.opponentPlayer[0]}'s Turn`\r\n    this.setState({statusMessage:message})\r\n  }\r\n\r\n  setTurn(turn){\r\n    if (this.state.piece === turn){\r\n      this.setState({turn:true})\r\n    }else{\r\n      this.setState({turn:false})\r\n    }\r\n  } \r\n\r\n  setBoard(gameState){\r\n    this.setState({game:gameState})\r\n  }\r\n  \r\n  renderSquare(i){\r\n    return(\r\n      <Square key={i} value={this.state.game[i]} \r\n                              player={this.state.piece} \r\n                              end={this.state.end} \r\n                              id={i} \r\n                              onClick={this.handleClick}\r\n                              turn={this.state.turn}/> \r\n    )\r\n  }\r\n\r\n  render(){\r\n    if (this.state.joinError){\r\n      return(\r\n        <Redirect to={`/`} />\r\n      )\r\n    }else{\r\n      const squareArray = []\r\n      for (let i=0; i<9; i++){\r\n        const newSquare = this.renderSquare(i)\r\n        squareArray.push(newSquare)\r\n      }\r\n      return(\r\n        <>\r\n          <Wait display={this.state.waiting} room={this.state.room}/>\r\n          <Status message={this.state.statusMessage}/>\r\n          <div className=\"board\">\r\n            {squareArray}\r\n          </div>\r\n          <ScoreBoard data={{player1:['You', this.state.currentPlayerScore], player2:[this.state.opponentPlayer[0], this.state.opponentPlayer[1]]}}/>\r\n          <PlayAgain end={this.state.end} onClick={this.playAgainRequest}/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Board\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\n\r\nimport Start from './components/pages/Start';\r\nimport Board from './components/pages/Board'\r\n\r\n\r\nconst Game = () => (\r\n    <Router>\r\n        <Route path='/' exact component={Start} />\r\n        <Route path='/game' component={Board} />\r\n    </Router>\r\n)\r\n \r\nexport default Game","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './Game'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}